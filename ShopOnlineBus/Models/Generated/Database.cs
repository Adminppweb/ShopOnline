
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `ShopOnlineConnection`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=PC-PHANBINH\SQLEXPRESS;Initial Catalog=ShopOnline;Integrated Security=True`
//     Schema:                 ``
//     Include Views:          `True`


using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace ShopOnlineConnection
{

	public partial class ShopOnlineConnectionDB : Database
	{
		public ShopOnlineConnectionDB() 
			: base("ShopOnlineConnection")
		{
			CommonConstruct();
		}

		public ShopOnlineConnectionDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			ShopOnlineConnectionDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static ShopOnlineConnectionDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new ShopOnlineConnectionDB();
        }

		[ThreadStatic] static ShopOnlineConnectionDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static ShopOnlineConnectionDB repo { get { return ShopOnlineConnectionDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.Business")]



	[PrimaryKey("ID_Bus")]




	[ExplicitColumns]

    public partial class Business : ShopOnlineConnectionDB.Record<Business>  
    {



		[Column] public int ID_Bus { get; set; }





		[Column] public string BusinessName { get; set; }



	}

    

	[TableName("dbo.CTHoaDon")]



	[PrimaryKey("ID_SanPham")]




	[ExplicitColumns]

    public partial class CTHoaDon : ShopOnlineConnectionDB.Record<CTHoaDon>  
    {



		[Column] public int ID_SanPham { get; set; }





		[Column] public int ID_HoaDon { get; set; }





		[Column] public string SoLuong { get; set; }



	}

    

	[TableName("dbo.GrantPermission")]



	[PrimaryKey("ID_Permission")]




	[ExplicitColumns]

    public partial class GrantPermission : ShopOnlineConnectionDB.Record<GrantPermission>  
    {



		[Column] public int ID_Permission { get; set; }





		[Column] public int ID_User { get; set; }



	}

    

	[TableName("dbo.HoaDon")]



	[PrimaryKey("ID_HoaDon")]




	[ExplicitColumns]

    public partial class HoaDon : ShopOnlineConnectionDB.Record<HoaDon>  
    {



		[Column] public int ID_HoaDon { get; set; }





		[Column] public int? ID_ThanhVien { get; set; }





		[Column] public DateTime? ThoiGianMua { get; set; }





		[Column] public string TongTien { get; set; }





		[Column] public string TinhTrang_HD { get; set; }



	}

    

	[TableName("dbo.LoaiSP")]



	[PrimaryKey("ID_Loai")]




	[ExplicitColumns]

    public partial class LoaiSP : ShopOnlineConnectionDB.Record<LoaiSP>  
    {



		[Column] public int ID_Loai { get; set; }





		[Column] public string TenLoai { get; set; }





		[Column] public int? ID_User { get; set; }



	}

    

	[TableName("dbo.NhanXet")]



	[PrimaryKey("ID_NX")]




	[ExplicitColumns]

    public partial class NhanXet : ShopOnlineConnectionDB.Record<NhanXet>  
    {



		[Column] public int ID_NX { get; set; }





		[Column] public int? ID_SanPham { get; set; }





		[Column] public int? ID_ThanhVien { get; set; }





		[Column] public string NoiDung { get; set; }



	}

    

	[TableName("dbo.NhaSanXuat")]



	[PrimaryKey("ID_NSX")]




	[ExplicitColumns]

    public partial class NhaSanXuat : ShopOnlineConnectionDB.Record<NhaSanXuat>  
    {



		[Column] public int ID_NSX { get; set; }





		[Column] public string TenNSX { get; set; }





		[Column] public int? ID_User { get; set; }



	}

    

	[TableName("dbo.Permission")]



	[PrimaryKey("ID_PM")]




	[ExplicitColumns]

    public partial class Permission : ShopOnlineConnectionDB.Record<Permission>  
    {



		[Column] public int ID_PM { get; set; }





		[Column] public string PermissionName { get; set; }





		[Column] public string Descripti { get; set; }





		[Column] public int? ID_Business { get; set; }



	}

    

	[TableName("dbo.PhanQuyen")]



	[PrimaryKey("ID_PQ")]




	[ExplicitColumns]

    public partial class PhanQuyen : ShopOnlineConnectionDB.Record<PhanQuyen>  
    {



		[Column] public int ID_PQ { get; set; }





		[Column] public string LoaiQuyen { get; set; }



	}

    

	[TableName("dbo.SanPham")]



	[PrimaryKey("ID_SP")]




	[ExplicitColumns]

    public partial class SanPham : ShopOnlineConnectionDB.Record<SanPham>  
    {



		[Column] public int ID_SP { get; set; }





		[Column] public string TenSP { get; set; }





		[Column] public string GiaBan { get; set; }





		[Column] public string MoTa { get; set; }





		[Column] public string SoLuongTon { get; set; }





		[Column] public string SoLuongBan { get; set; }





		[Column] public string TinhTrangSP { get; set; }





		[Column] public int? ID_LoaiSP { get; set; }





		[Column] public int? ID_NhaSanXuat { get; set; }





		[Column] public DateTime? NgayNhap { get; set; }





		[Column] public string HinhAnhSP { get; set; }





		[Column] public int? ID_User { get; set; }



	}

    

	[TableName("dbo.sysdiagrams")]



	[PrimaryKey("diagram_id")]




	[ExplicitColumns]

    public partial class sysdiagram : ShopOnlineConnectionDB.Record<sysdiagram>  
    {



		[Column] public string name { get; set; }





		[Column] public int principal_id { get; set; }





		[Column] public int diagram_id { get; set; }





		[Column] public int? version { get; set; }





		[Column] public byte[] definition { get; set; }



	}

    

	[TableName("dbo.ThanhVien")]



	[PrimaryKey("ID_TV")]




	[ExplicitColumns]

    public partial class ThanhVien : ShopOnlineConnectionDB.Record<ThanhVien>  
    {



		[Column] public int ID_TV { get; set; }





		[Column] public string TaiKhoan { get; set; }





		[Column] public string MatKhau { get; set; }





		[Column] public string HoTen { get; set; }





		[Column] public DateTime? NgaySinh { get; set; }





		[Column] public string SoDT { get; set; }





		[Column] public string DiaChi { get; set; }





		[Column] public string Email { get; set; }





		[Column] public string CMND { get; set; }





		[Column] public string HinhAnh { get; set; }





		[Column] public int? ID_PhanQuyen { get; set; }



	}

    

	[TableName("dbo.UserAdmin")]



	[PrimaryKey("ID_UD")]




	[ExplicitColumns]

    public partial class UserAdmin : ShopOnlineConnectionDB.Record<UserAdmin>  
    {



		[Column] public int ID_UD { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public string PassWor { get; set; }





		[Column] public string FullName { get; set; }





		[Column] public DateTime? Birthday { get; set; }





		[Column] public string Phone { get; set; }





		[Column] public string Addres { get; set; }





		[Column] public string Email { get; set; }





		[Column] public string Avartar { get; set; }





		[Column] public bool? IsAdmin { get; set; }





		[Column] public bool? Allowed { get; set; }



	}

    

	[TableName("dbo.viewSanPham")]




	[ExplicitColumns]

    public partial class viewSanPham : ShopOnlineConnectionDB.Record<viewSanPham>  
    {



		[Column] public int ID_SP { get; set; }





		[Column] public string TenSP { get; set; }





		[Column] public string GiaBan { get; set; }





		[Column] public string MoTa { get; set; }





		[Column] public string SoLuongTon { get; set; }





		[Column] public string SoLuongBan { get; set; }





		[Column] public string TinhTrangSP { get; set; }





		[Column] public int? ID_LoaiSP { get; set; }





		[Column] public int? ID_NhaSanXuat { get; set; }





		[Column] public DateTime? NgayNhap { get; set; }





		[Column] public string HinhAnhSP { get; set; }





		[Column] public int? ID_User { get; set; }





		[Column] public string TenLoai { get; set; }





		[Column] public string TenNSX { get; set; }



	}


}
